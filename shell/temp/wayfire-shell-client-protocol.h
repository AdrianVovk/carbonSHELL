/* Generated by wayland-scanner 1.14.0 */

#ifndef WAYFIRE_SHELL_CLIENT_PROTOCOL_H
#define WAYFIRE_SHELL_CLIENT_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-client.h"

#ifdef  __cplusplus
extern "C" {
#endif

/**
 * @page page_wayfire_shell The wayfire_shell protocol
 * @section page_ifaces_wayfire_shell Interfaces
 * - @subpage page_iface_wayfire_shell - create desktop panels, background, lock screens
 * - @subpage page_iface_wayfire_virtual_keyboard - 
 */
struct wayfire_shell;
struct wayfire_virtual_keyboard;
struct wl_surface;

/**
 * @page page_iface_wayfire_shell wayfire_shell
 * @section page_iface_wayfire_shell_desc Description
 * @section page_iface_wayfire_shell_api API
 * See @ref iface_wayfire_shell.
 */
/**
 * @defgroup iface_wayfire_shell The wayfire_shell interface
 */
extern const struct wl_interface wayfire_shell_interface;
/**
 * @page page_iface_wayfire_virtual_keyboard wayfire_virtual_keyboard
 * @section page_iface_wayfire_virtual_keyboard_api API
 * See @ref iface_wayfire_virtual_keyboard.
 */
/**
 * @defgroup iface_wayfire_virtual_keyboard The wayfire_virtual_keyboard interface
 */
extern const struct wl_interface wayfire_virtual_keyboard_interface;

#ifndef WAYFIRE_SHELL_PANEL_POSITION_ENUM
#define WAYFIRE_SHELL_PANEL_POSITION_ENUM
enum wayfire_shell_panel_position {
	WAYFIRE_SHELL_PANEL_POSITION_LEFT = 1,
	WAYFIRE_SHELL_PANEL_POSITION_RIGHT = 2,
	WAYFIRE_SHELL_PANEL_POSITION_UP = 3,
	WAYFIRE_SHELL_PANEL_POSITION_DOWN = 4,
};
#endif /* WAYFIRE_SHELL_PANEL_POSITION_ENUM */

/**
 * @ingroup iface_wayfire_shell
 * @struct wayfire_shell_listener
 */
struct wayfire_shell_listener {
	/**
	 */
	void (*output_created)(void *data,
			       struct wayfire_shell *wayfire_shell,
			       uint32_t output,
			       uint32_t width,
			       uint32_t height);
	/**
	 */
	void (*output_resized)(void *data,
			       struct wayfire_shell *wayfire_shell,
			       uint32_t output,
			       uint32_t width,
			       uint32_t height);
	/**
	 */
	void (*output_destroyed)(void *data,
				 struct wayfire_shell *wayfire_shell,
				 uint32_t output);
	/**
	 */
	void (*output_autohide_panels)(void *data,
				       struct wayfire_shell *wayfire_shell,
				       uint32_t output,
				       uint32_t autohide);
	/**
	 */
	void (*gamma_size)(void *data,
			   struct wayfire_shell *wayfire_shell,
			   uint32_t output,
			   uint32_t size);
};

/**
 * @ingroup iface_wayfire_shell
 */
static inline int
wayfire_shell_add_listener(struct wayfire_shell *wayfire_shell,
			   const struct wayfire_shell_listener *listener, void *data)
{
	return wl_proxy_add_listener((struct wl_proxy *) wayfire_shell,
				     (void (**)(void)) listener, data);
}

#define WAYFIRE_SHELL_ADD_BACKGROUND 0
#define WAYFIRE_SHELL_ADD_PANEL 1
#define WAYFIRE_SHELL_CONFIGURE_PANEL 2
#define WAYFIRE_SHELL_RESERVE 3
#define WAYFIRE_SHELL_SET_COLOR_GAMMA 4
#define WAYFIRE_SHELL_OUTPUT_FADE_IN_START 5

/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_OUTPUT_CREATED_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_OUTPUT_RESIZED_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_OUTPUT_DESTROYED_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_OUTPUT_AUTOHIDE_PANELS_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_GAMMA_SIZE_SINCE_VERSION 1

/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_ADD_BACKGROUND_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_ADD_PANEL_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_CONFIGURE_PANEL_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_RESERVE_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_SET_COLOR_GAMMA_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_shell
 */
#define WAYFIRE_SHELL_OUTPUT_FADE_IN_START_SINCE_VERSION 1

/** @ingroup iface_wayfire_shell */
static inline void
wayfire_shell_set_user_data(struct wayfire_shell *wayfire_shell, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) wayfire_shell, user_data);
}

/** @ingroup iface_wayfire_shell */
static inline void *
wayfire_shell_get_user_data(struct wayfire_shell *wayfire_shell)
{
	return wl_proxy_get_user_data((struct wl_proxy *) wayfire_shell);
}

static inline uint32_t
wayfire_shell_get_version(struct wayfire_shell *wayfire_shell)
{
	return wl_proxy_get_version((struct wl_proxy *) wayfire_shell);
}

/** @ingroup iface_wayfire_shell */
static inline void
wayfire_shell_destroy(struct wayfire_shell *wayfire_shell)
{
	wl_proxy_destroy((struct wl_proxy *) wayfire_shell);
}

/**
 * @ingroup iface_wayfire_shell
 */
static inline void
wayfire_shell_add_background(struct wayfire_shell *wayfire_shell, uint32_t output, struct wl_surface *surface, int32_t x, int32_t y)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_shell,
			 WAYFIRE_SHELL_ADD_BACKGROUND, output, surface, x, y);
}

/**
 * @ingroup iface_wayfire_shell
 */
static inline void
wayfire_shell_add_panel(struct wayfire_shell *wayfire_shell, uint32_t output, struct wl_surface *surface)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_shell,
			 WAYFIRE_SHELL_ADD_PANEL, output, surface);
}

/**
 * @ingroup iface_wayfire_shell
 */
static inline void
wayfire_shell_configure_panel(struct wayfire_shell *wayfire_shell, uint32_t output, struct wl_surface *surface, int32_t x, int32_t y)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_shell,
			 WAYFIRE_SHELL_CONFIGURE_PANEL, output, surface, x, y);
}

/**
 * @ingroup iface_wayfire_shell
 */
static inline void
wayfire_shell_reserve(struct wayfire_shell *wayfire_shell, uint32_t output, uint32_t side, uint32_t width, uint32_t height)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_shell,
			 WAYFIRE_SHELL_RESERVE, output, side, width, height);
}

/**
 * @ingroup iface_wayfire_shell
 */
static inline void
wayfire_shell_set_color_gamma(struct wayfire_shell *wayfire_shell, uint32_t output, struct wl_array *gamma_r, struct wl_array *gamma_b, struct wl_array *gamma_g)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_shell,
			 WAYFIRE_SHELL_SET_COLOR_GAMMA, output, gamma_r, gamma_b, gamma_g);
}

/**
 * @ingroup iface_wayfire_shell
 */
static inline void
wayfire_shell_output_fade_in_start(struct wayfire_shell *wayfire_shell, uint32_t output)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_shell,
			 WAYFIRE_SHELL_OUTPUT_FADE_IN_START, output);
}

/**
 * @ingroup iface_wayfire_virtual_keyboard
 * @struct wayfire_virtual_keyboard_listener
 */
struct wayfire_virtual_keyboard_listener {
	/**
	 */
	void (*match_output_size)(void *data,
				  struct wayfire_virtual_keyboard *wayfire_virtual_keyboard,
				  uint32_t width,
				  uint32_t height);
	/**
	 */
	void (*show_virtual_keyboard)(void *data,
				      struct wayfire_virtual_keyboard *wayfire_virtual_keyboard);
};

/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
static inline int
wayfire_virtual_keyboard_add_listener(struct wayfire_virtual_keyboard *wayfire_virtual_keyboard,
				      const struct wayfire_virtual_keyboard_listener *listener, void *data)
{
	return wl_proxy_add_listener((struct wl_proxy *) wayfire_virtual_keyboard,
				     (void (**)(void)) listener, data);
}

#define WAYFIRE_VIRTUAL_KEYBOARD_SEND_KEY_PRESSED 0
#define WAYFIRE_VIRTUAL_KEYBOARD_SEND_KEY_RELEASED 1
#define WAYFIRE_VIRTUAL_KEYBOARD_SET_VIRTUAL_KEYBOARD 2
#define WAYFIRE_VIRTUAL_KEYBOARD_CONFIGURE_KEYBOARD 3
#define WAYFIRE_VIRTUAL_KEYBOARD_START_INTERACTIVE_MOVE 4

/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
#define WAYFIRE_VIRTUAL_KEYBOARD_MATCH_OUTPUT_SIZE_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
#define WAYFIRE_VIRTUAL_KEYBOARD_SHOW_VIRTUAL_KEYBOARD_SINCE_VERSION 1

/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
#define WAYFIRE_VIRTUAL_KEYBOARD_SEND_KEY_PRESSED_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
#define WAYFIRE_VIRTUAL_KEYBOARD_SEND_KEY_RELEASED_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
#define WAYFIRE_VIRTUAL_KEYBOARD_SET_VIRTUAL_KEYBOARD_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
#define WAYFIRE_VIRTUAL_KEYBOARD_CONFIGURE_KEYBOARD_SINCE_VERSION 1
/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
#define WAYFIRE_VIRTUAL_KEYBOARD_START_INTERACTIVE_MOVE_SINCE_VERSION 1

/** @ingroup iface_wayfire_virtual_keyboard */
static inline void
wayfire_virtual_keyboard_set_user_data(struct wayfire_virtual_keyboard *wayfire_virtual_keyboard, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) wayfire_virtual_keyboard, user_data);
}

/** @ingroup iface_wayfire_virtual_keyboard */
static inline void *
wayfire_virtual_keyboard_get_user_data(struct wayfire_virtual_keyboard *wayfire_virtual_keyboard)
{
	return wl_proxy_get_user_data((struct wl_proxy *) wayfire_virtual_keyboard);
}

static inline uint32_t
wayfire_virtual_keyboard_get_version(struct wayfire_virtual_keyboard *wayfire_virtual_keyboard)
{
	return wl_proxy_get_version((struct wl_proxy *) wayfire_virtual_keyboard);
}

/** @ingroup iface_wayfire_virtual_keyboard */
static inline void
wayfire_virtual_keyboard_destroy(struct wayfire_virtual_keyboard *wayfire_virtual_keyboard)
{
	wl_proxy_destroy((struct wl_proxy *) wayfire_virtual_keyboard);
}

/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
static inline void
wayfire_virtual_keyboard_send_key_pressed(struct wayfire_virtual_keyboard *wayfire_virtual_keyboard, uint32_t key)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_virtual_keyboard,
			 WAYFIRE_VIRTUAL_KEYBOARD_SEND_KEY_PRESSED, key);
}

/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
static inline void
wayfire_virtual_keyboard_send_key_released(struct wayfire_virtual_keyboard *wayfire_virtual_keyboard, uint32_t key)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_virtual_keyboard,
			 WAYFIRE_VIRTUAL_KEYBOARD_SEND_KEY_RELEASED, key);
}

/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
static inline void
wayfire_virtual_keyboard_set_virtual_keyboard(struct wayfire_virtual_keyboard *wayfire_virtual_keyboard, struct wl_surface *surface)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_virtual_keyboard,
			 WAYFIRE_VIRTUAL_KEYBOARD_SET_VIRTUAL_KEYBOARD, surface);
}

/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
static inline void
wayfire_virtual_keyboard_configure_keyboard(struct wayfire_virtual_keyboard *wayfire_virtual_keyboard, struct wl_surface *surface, int32_t x, int32_t y)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_virtual_keyboard,
			 WAYFIRE_VIRTUAL_KEYBOARD_CONFIGURE_KEYBOARD, surface, x, y);
}

/**
 * @ingroup iface_wayfire_virtual_keyboard
 */
static inline void
wayfire_virtual_keyboard_start_interactive_move(struct wayfire_virtual_keyboard *wayfire_virtual_keyboard, struct wl_surface *surface)
{
	wl_proxy_marshal((struct wl_proxy *) wayfire_virtual_keyboard,
			 WAYFIRE_VIRTUAL_KEYBOARD_START_INTERACTIVE_MOVE, surface);
}

#ifdef  __cplusplus
}
#endif

#endif
